{"version":3,"file":"static/js/913.eeb8d5d2.chunk.js","mappings":"4TAEAA,IAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAEHC,EAAY,mCAAG,WAAMC,GAAN,uFACHH,IAAAA,IAAA,gCACIC,EADJ,wCAC2CE,EAD3C,wBADG,cACpBC,EADoB,yBAInBA,EAASC,KAAKC,SAJK,2CAAH,sDAOZC,EAAW,mCAAG,oGACFP,IAAAA,IAAA,qCAAwCC,IADtC,cACnBG,EADmB,yBAElBA,EAASC,KAAKC,SAFI,2CAAH,qDAKXE,EAAU,mCAAG,WAAMC,GAAN,uFACDT,IAAAA,IAAA,iBACXS,EADW,oBACQR,EADR,oBADC,cAClBG,EADkB,yBAIjBA,EAASC,MAJQ,2CAAH,sDAOVK,EAAO,mCAAG,WAAMD,GAAN,uFACET,IAAAA,IAAA,iBACXS,EADW,4BACgBR,EADhB,oBADF,cACfG,EADe,yBAIdA,EAASC,KAAKM,MAJA,2CAAH,sDAOPC,EAAU,mCAAG,WAAMH,GAAN,uFACDT,IAAAA,IAAA,iBACXS,EADW,4BACgBR,EADhB,2BADC,cAClBG,EADkB,yBAIjBA,EAASC,KAAKC,SAJG,2CAAH,uD,4EC9BvB,EAAuB,4BAAvB,EAA0D,4BAA1D,EAA8F,6BAA9F,EAAqI,+BAArI,EAA4K,6B,SCI/JO,EAAgB,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACtBC,EAAiCD,EAAjCC,YAAaC,EAAoBF,EAApBE,KAAMC,EAAcH,EAAdG,MAAOC,EAAOJ,EAAPI,GAC5BC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAAC,KAAD,CACEC,GAAE,kBAAaH,GACfI,UAAWC,EACXC,MAAO,CACLC,KAAMN,EAASO,SAAWP,EAASQ,QAJvC,UAOE,iBAAKL,UAAWC,EAAhB,WACE,yBACE,gBACEK,IACEb,EAAW,0CAC4BA,GACnC,oHAENc,IAAKZ,EACLK,UAAWC,OAGf,gBAAKD,UAAWC,EAAhB,UACE,cAAGD,UAAWC,EAAd,gBAA6BN,QAA7B,IAA6BA,EAAAA,EAASD,Y,UCxBnCc,EAAY,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAC1B,OACE,gBAAKT,UAAWC,EAAAA,EAAAA,aAAhB,UACE,eAAID,UAAWC,EAAAA,EAAAA,KAAf,SACGQ,EAAOC,KAAI,SAAAlB,GAAK,OACf,SAACD,EAAD,CAA8BC,MAAOA,GAAjBA,EAAMI,a,8GCiBpC,UApBiB,WACf,OAA4Be,EAAAA,EAAAA,UAAS,MAArC,eAAOF,EAAP,KAAeG,EAAf,KACA,GAA0BD,EAAAA,EAAAA,UAAS,IAAnC,eAAOE,EAAP,KAAcC,EAAd,KAQA,OANAC,EAAAA,EAAAA,YAAU,YACR9B,EAAAA,EAAAA,MACG+B,MAAK,SAAAhC,GAAO,OAAI4B,GAAU,OAAI5B,OAC9BiC,OAAM,SAAAJ,GAAK,OAAIC,EAASD,EAAMK,cAChC,KAGD,iCACE,eAAIlB,UAAWC,EAAAA,EAAAA,SAAf,8BACEQ,IAAU,SAAC,IAAD,IACXA,IAAU,SAAC,IAAD,CAAWA,OAAQA,IAC7BI,IAAS,8E,mBCtBhB,KAAgB,aAAe,gCAAgC,KAAO,wBAAwB,SAAW,8B,+ECG1F,SAASM,EAAmBC,GACzC,OCJa,SAA4BA,GACzC,GAAIC,MAAMC,QAAQF,GAAM,OAAO,EAAAG,EAAA,GAAiBH,GDGzC,CAAkBA,IELZ,SAA0BI,GACvC,GAAsB,qBAAXC,QAAmD,MAAzBD,EAAKC,OAAOC,WAA2C,MAAtBF,EAAK,cAAuB,OAAOH,MAAMlB,KAAKqB,GFInF,CAAgBJ,KAAQ,EAAAO,EAAA,GAA2BP,IGLvE,WACb,MAAM,IAAIQ,UAAU,wIHIwE","sources":["API/fetchMovies.js","webpack://goit-react-hw-05-movies/./src/components/MovieList/MovieListItem/MovieListItem.module.css?166d","components/MovieList/MovieListItem/MovieListItem.jsx","components/MovieList/MovieList.jsx","components/Pages/HomePage.jsx","webpack://goit-react-hw-05-movies/./src/components/MovieList/MovieList.module.css?6db5","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"sourcesContent":["import axios from 'axios';\r\n\r\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\r\nconst API_KEY = '11fab2ef7976d431da0b2ac329178c30';\r\n\r\nexport const searchMovies = async query => {\r\n  const response = await axios.get(\r\n    `/search/movie?api_key=${API_KEY}&language=en-US&page=1&query=${query}&include_adult=true`\r\n  );\r\n  return response.data.results;\r\n};\r\n\r\nexport const getTrending = async () => {\r\n  const response = await axios.get(`/trending/all/week?api_key=${API_KEY}`);\r\n  return response.data.results;\r\n};\r\n\r\nexport const getDetails = async movieId => {\r\n  const response = await axios.get(\r\n    `/movie/${movieId}?api_key=${API_KEY}&language=en-US`\r\n  );\r\n  return response.data;\r\n};\r\n\r\nexport const getCast = async movieId => {\r\n  const response = await axios.get(\r\n    `/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\r\n  );\r\n  return response.data.cast;\r\n};\r\n\r\nexport const getReviews = async movieId => {\r\n  const response = await axios.get(\r\n    `/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\r\n  );\r\n  return response.data.results;\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"link\":\"MovieListItem_link__vukLH\",\"item\":\"MovieListItem_item__reSxB\",\"image\":\"MovieListItem_image__SlX2F\",\"wrapper\":\"MovieListItem_wrapper__4Lh2n\",\"title\":\"MovieListItem_title__E3kP1\"};","import { Link, useLocation } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport styles from './MovieListItem.module.css';\r\n\r\nexport const MovieListItem = ({ movie }) => {\r\n  const { poster_path, name, title, id } = movie;\r\n  const location = useLocation();\r\n\r\n  return (\r\n    <Link\r\n      to={`/movies/${id}`}\r\n      className={styles.link}\r\n      state={{\r\n        from: location.pathname + location.search,\r\n      }}\r\n    >\r\n      <div className={styles.item}>\r\n        <li>\r\n          <img\r\n            src={\r\n              poster_path\r\n                ? `https://image.tmdb.org/t/p/w300/${poster_path}`\r\n                : 'https://upload.wikimedia.org/wikipedia/commons/thumb/a/ac/No_image_available.svg/300px-No_image_available.svg.png'\r\n            }\r\n            alt={title}\r\n            className={styles.image}\r\n          />\r\n        </li>\r\n        <div className={styles.wrapper}>\r\n          <p className={styles.title}>{title ?? name}</p>\r\n        </div>\r\n      </div>\r\n    </Link>\r\n  );\r\n};\r\n\r\nMovieListItem.propTypes = {\r\n  movie: PropTypes.shape({\r\n    id: PropTypes.number.isRequired,\r\n    poster_path: PropTypes.string,\r\n    name: PropTypes.string,\r\n    title: PropTypes.string,\r\n  }).isRequired,\r\n};\r\n","import PropTypes from 'prop-types';\r\n\r\nimport { MovieListItem } from 'components/MovieList/MovieListItem/MovieListItem';\r\n\r\nimport styles from './MovieList.module.css';\r\n\r\nexport const MovieList = ({ movies }) => {\r\n  return (\r\n    <div className={styles.list_section}>\r\n      <ul className={styles.list}>\r\n        {movies.map(movie => (\r\n          <MovieListItem key={movie.id} movie={movie} />\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nMovieList.propTypes = {\r\n  movies: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n    })\r\n  ).isRequired,\r\n};\r\n","import { useState, useEffect } from 'react';\r\n\r\nimport { getTrending } from 'API/fetchMovies';\r\nimport { Loader } from 'components/Loader';\r\nimport { MovieList } from 'components/MovieList/MovieList';\r\n\r\nimport styles from 'components/MovieList/MovieList.module.css';\r\n\r\nconst HomePage = () => {\r\n  const [movies, setMovies] = useState(null);\r\n  const [error, setError] = useState('');\r\n\r\n  useEffect(() => {\r\n    getTrending()\r\n      .then(results => setMovies([...results]))\r\n      .catch(error => setError(error.message));\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <h2 className={styles.trending}>Trending Movies</h2>\r\n      {!movies && <Loader />}\r\n      {movies && <MovieList movies={movies} />}\r\n      {error && <p>Something went wrong, please try again later!</p>}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"list_section\":\"MovieList_list_section__aRtTW\",\"list\":\"MovieList_list__oojWV\",\"trending\":\"MovieList_trending__baI8t\"};","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"names":["axios","API_KEY","searchMovies","query","response","data","results","getTrending","getDetails","movieId","getCast","cast","getReviews","MovieListItem","movie","poster_path","name","title","id","location","useLocation","to","className","styles","state","from","pathname","search","src","alt","MovieList","movies","map","useState","setMovies","error","setError","useEffect","then","catch","message","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","unsupportedIterableToArray","TypeError"],"sourceRoot":""}