{"version":3,"file":"static/js/689.f6e30091.chunk.js","mappings":"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","sources":["API/fetchMovies.js","webpack://goit-react-hw-05-movies/./src/components/MovieDetails/MovieDetails.module.css?9ca9","components/MovieDetails/MovieDetails.jsx","components/Pages/MovieDetailsPage.jsx"],"sourcesContent":["import axios from 'axios';\r\n\r\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\r\nconst API_KEY = '11fab2ef7976d431da0b2ac329178c30';\r\n\r\nexport const searchMovies = async query => {\r\n  const response = await axios.get(\r\n    `/search/movie?api_key=${API_KEY}&language=en-US&page=1&query=${query}&include_adult=true`\r\n  );\r\n  return response.data.results;\r\n};\r\n\r\nexport const getTrending = async () => {\r\n  const response = await axios.get(`/trending/all/week?api_key=${API_KEY}`);\r\n  return response.data.results;\r\n};\r\n\r\nexport const getDetails = async movieId => {\r\n  const response = await axios.get(\r\n    `/movie/${movieId}?api_key=${API_KEY}&language=en-US`\r\n  );\r\n  return response.data;\r\n};\r\n\r\nexport const getCast = async movieId => {\r\n  const response = await axios.get(\r\n    `/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\r\n  );\r\n  return response.data.cast;\r\n};\r\n\r\nexport const getReviews = async movieId => {\r\n  const response = await axios.get(\r\n    `/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\r\n  );\r\n  return response.data.results;\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"MovieDetails_button__9KiRE\",\"details_container\":\"MovieDetails_details_container__KRy6S\",\"image\":\"MovieDetails_image__8N0id\",\"info\":\"MovieDetails_info__ezGxz\",\"title\":\"MovieDetails_title__HbA9D\",\"release_date\":\"MovieDetails_release_date__fvnvO\",\"score\":\"MovieDetails_score__UbS-h\",\"overview\":\"MovieDetails_overview__bqReo\",\"info_overview\":\"MovieDetails_info_overview__Ntced\",\"genres\":\"MovieDetails_genres__e8eRy\",\"more_information\":\"MovieDetails_more_information__UfRTg\",\"text\":\"MovieDetails_text__-wEox\",\"link\":\"MovieDetails_link__ZFqog\"};","import { useLocation, NavLink } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport styles from './MovieDetails.module.css';\r\n\r\nexport const MovieDetails = ({ movie }) => {\r\n  const {\r\n    original_title,\r\n    genres,\r\n    overview,\r\n    poster_path,\r\n    release_date,\r\n    vote_average,\r\n  } = movie;\r\n\r\n  const genresAll = genres.map(genre => genre.name).join(', ');\r\n  const location = useLocation();\r\n\r\n  return (\r\n    <>\r\n      <div className={styles.details_container}>\r\n        <img\r\n          className={styles.image}\r\n          src={\r\n            poster_path\r\n              ? `https://image.tmdb.org/t/p/w300/${poster_path}`\r\n              : 'https://upload.wikimedia.org/wikipedia/commons/thumb/a/ac/No_image_available.svg/300px-No_image_available.svg.png'\r\n          }\r\n          alt={original_title}\r\n        />\r\n        <div className={styles.info}>\r\n          <h1 className={styles.title}>{original_title}</h1>\r\n          <h2 className={styles.release_date}> ({release_date})</h2>\r\n          <p className={styles.score}>User Score: {vote_average}</p>\r\n          <h2 className={styles.overview}>Overview</h2>\r\n          <p className={styles.info_overview}>{overview}</p>\r\n          <h2 className={styles.genres}>Genres</h2>\r\n          <p>{genresAll}</p>\r\n        </div>\r\n      </div>\r\n      <div className={styles.more_information}>\r\n        <NavLink to=\"cast\" className={styles.link} state={location.state}>\r\n          Cast\r\n        </NavLink>\r\n        <NavLink to=\"reviews\" className={styles.link} state={location.state}>\r\n          Reviews\r\n        </NavLink>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nMovieDetails.propTypes = {\r\n  movie: PropTypes.shape({\r\n    original_title: PropTypes.string.isRequired,\r\n    genres: PropTypes.arrayOf(\r\n      PropTypes.shape({\r\n        name: PropTypes.string.isRequired,\r\n      })\r\n    ).isRequired,\r\n    overview: PropTypes.string.isRequired,\r\n    poster_path: PropTypes.string,\r\n    release_date: PropTypes.string.isRequired,\r\n    vote_average: PropTypes.number.isRequired,\r\n  }).isRequired,\r\n};\r\n","import { useState, useEffect, lazy } from 'react';\r\nimport {\r\n  useParams,\r\n  useNavigate,\r\n  useLocation,\r\n  Routes,\r\n  Route,\r\n} from 'react-router-dom';\r\n\r\nimport { getDetails } from 'API/fetchMovies';\r\nimport { Loader } from 'components/Loader';\r\nimport { MovieDetails } from 'components/MovieDetails';\r\n\r\nimport styles from 'components/MovieDetails/MovieDetails.module.css';\r\n\r\nconst CastPage = lazy(() => import('./CastPage'));\r\nconst ReviewsPage = lazy(() => import('./ReviewsPage'));\r\n\r\nconst MovieDetailsPage = () => {\r\n  const { movieId } = useParams();\r\n  const [movie, setMovie] = useState(null);\r\n  const [error, setError] = useState('');\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n\r\n  const onGoBack = () => {\r\n    navigate(location?.state?.from ?? '/');\r\n  };\r\n\r\n  useEffect(() => {\r\n    getDetails(movieId)\r\n      .then(results => setMovie(results))\r\n      .catch(error => setError(error.message));\r\n  }, [movieId]);\r\n\r\n  return (\r\n    <>\r\n      <button type=\"button\" className={styles.button} onClick={onGoBack}>\r\n        To Movies\r\n      </button>\r\n      {!movie && <Loader />}\r\n      {movie && <MovieDetails movie={movie} />}\r\n      {error && <p>Something went wrong, please try again later!</p>}\r\n      <Routes>\r\n        <Route path=\"cast\" element={<CastPage />} />\r\n        <Route path=\"reviews\" element={<ReviewsPage />} />\r\n      </Routes>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MovieDetailsPage;\r\n"],"names":["axios","API_KEY","searchMovies","query","response","data","results","getTrending","getDetails","movieId","getCast","cast","getReviews","MovieDetails","movie","original_title","genres","overview","poster_path","release_date","vote_average","genresAll","map","genre","name","join","location","useLocation","className","styles","src","alt","to","state","CastPage","lazy","ReviewsPage","useParams","useState","setMovie","error","setError","navigate","useNavigate","useEffect","then","catch","message","type","onClick","from","Loader","path","element"],"sourceRoot":""}