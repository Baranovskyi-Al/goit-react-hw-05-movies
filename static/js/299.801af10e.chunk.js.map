{"version":3,"file":"static/js/299.801af10e.chunk.js","mappings":"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","sources":["API/fetchMovies.js","webpack://goit-react-hw-05-movies/./src/components/MovieList/MovieListItem/MovieListItem.module.css?166d","components/MovieList/MovieListItem/MovieListItem.jsx","components/MovieList/MovieList.jsx","components/Pages/MoviePage.jsx","webpack://goit-react-hw-05-movies/./src/components/MovieList/MovieList.module.css?6db5"],"sourcesContent":["import axios from 'axios';\r\n\r\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\r\nconst API_KEY = '11fab2ef7976d431da0b2ac329178c30';\r\n\r\nexport const searchMovies = async query => {\r\n  const response = await axios.get(\r\n    `/search/movie?api_key=${API_KEY}&language=en-US&page=1&query=${query}&include_adult=true`\r\n  );\r\n  return response.data.results;\r\n};\r\n\r\nexport const getTrending = async () => {\r\n  const response = await axios.get(`/trending/all/week?api_key=${API_KEY}`);\r\n  return response.data.results;\r\n};\r\n\r\nexport const getDetails = async movieId => {\r\n  const response = await axios.get(\r\n    `/movie/${movieId}?api_key=${API_KEY}&language=en-US`\r\n  );\r\n  return response.data;\r\n};\r\n\r\nexport const getCast = async movieId => {\r\n  const response = await axios.get(\r\n    `/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\r\n  );\r\n  return response.data.cast;\r\n};\r\n\r\nexport const getReviews = async movieId => {\r\n  const response = await axios.get(\r\n    `/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\r\n  );\r\n  return response.data.results;\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"link\":\"MovieListItem_link__vukLH\",\"item\":\"MovieListItem_item__reSxB\",\"image\":\"MovieListItem_image__SlX2F\",\"wrapper\":\"MovieListItem_wrapper__4Lh2n\",\"title\":\"MovieListItem_title__E3kP1\"};","import { Link, useLocation } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport styles from './MovieListItem.module.css';\r\n\r\nexport const MovieListItem = ({ movie }) => {\r\n  const { poster_path, name, title, id } = movie;\r\n  const location = useLocation();\r\n\r\n  return (\r\n    <Link\r\n      to={`/movies/${id}`}\r\n      className={styles.link}\r\n      state={{\r\n        from: location.pathname + location.search,\r\n      }}\r\n    >\r\n      <div className={styles.item}>\r\n        <li>\r\n          <img\r\n            src={\r\n              poster_path\r\n                ? `https://image.tmdb.org/t/p/w300/${poster_path}`\r\n                : 'https://upload.wikimedia.org/wikipedia/commons/thumb/a/ac/No_image_available.svg/300px-No_image_available.svg.png'\r\n            }\r\n            alt={title}\r\n            className={styles.image}\r\n          />\r\n        </li>\r\n        <div className={styles.wrapper}>\r\n          <p className={styles.title}>{title ?? name}</p>\r\n        </div>\r\n      </div>\r\n    </Link>\r\n  );\r\n};\r\n\r\nMovieListItem.propTypes = {\r\n  movie: PropTypes.shape({\r\n    id: PropTypes.number.isRequired,\r\n    poster_path: PropTypes.string,\r\n    name: PropTypes.string,\r\n    title: PropTypes.string,\r\n  }).isRequired,\r\n};\r\n","import PropTypes from 'prop-types';\r\n\r\nimport { MovieListItem } from 'components/MovieList/MovieListItem/MovieListItem';\r\n\r\nimport styles from './MovieList.module.css';\r\n\r\nexport const MovieList = ({ movies }) => {\r\n  return (\r\n    <div className={styles.list_section}>\r\n      <ul className={styles.list}>\r\n        {movies.map(movie => (\r\n          <MovieListItem key={movie.id} movie={movie} />\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nMovieList.propTypes = {\r\n  movies: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n    })\r\n  ).isRequired,\r\n};\r\n","import { useState, useEffect } from 'react';\r\nimport { useSearchParams } from 'react-router-dom';\r\nimport { FcSearch } from 'react-icons/fc';\r\nimport Notiflix from 'notiflix';\r\n\r\nimport { searchMovies } from 'API/fetchMovies';\r\nimport { Loader } from 'components/Loader';\r\nimport { MovieList } from 'components/MovieList/MovieList';\r\n\r\nimport styles from 'components/Header/Header.module.css';\r\n\r\nconst MoviePage = () => {\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [movies, setMovies] = useState(null);\r\n  const [error, setError] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [searchParams, setSearchParams] = useSearchParams();\r\n\r\n  const handleChange = element => {\r\n    setSearchQuery(element.currentTarget.value);\r\n  };\r\n  const onFormSubmit = element => {\r\n    element.preventDefault();\r\n\r\n    const newQuery = element.target.elements.query.value.toLowerCase();\r\n    if (newQuery.trim() === '') {\r\n      Notiflix.Notify.failure(\"Please, enter correct movie's name\");\r\n      return;\r\n    }\r\n    setSearchParams({ query: newQuery });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (searchParams.get('query') !== null) {\r\n      const newQuery = searchParams.get('query');\r\n      setLoading(true);\r\n      searchMovies(newQuery)\r\n        .then(results => {\r\n          results.length !== 0\r\n            ? setMovies([...results])\r\n            : Notiflix.Notify.failure(\r\n                \"Sorry, we didn't find any movies matching your search. Please, try again\"\r\n              );\r\n        })\r\n        .catch(error => setError(error.message))\r\n        .finally(() => setLoading(false));\r\n      setSearchQuery(searchParams.get('query'));\r\n    }\r\n  }, [searchParams]);\r\n\r\n  return (\r\n    <>\r\n      <form className={styles.form} onSubmit={onFormSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          name=\"query\"\r\n          value={searchQuery}\r\n          onChange={handleChange}\r\n          className={styles.input}\r\n          autoFocus={true}\r\n        />\r\n        <button type=\"submit\" className={styles.button}>\r\n          <FcSearch className={styles.icon} />\r\n        </button>\r\n      </form>\r\n      {loading && <Loader />}\r\n      {movies && <MovieList movies={movies} />}\r\n      {error && <p>Something went wrong, please try again later!</p>}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MoviePage;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"list_section\":\"MovieList_list_section__aRtTW\",\"list\":\"MovieList_list__oojWV\",\"trending\":\"MovieList_trending__baI8t\"};"],"names":["axios","API_KEY","searchMovies","query","response","data","results","getTrending","getDetails","movieId","getCast","cast","getReviews","MovieListItem","movie","poster_path","name","title","id","location","useLocation","to","className","styles","state","from","pathname","search","src","alt","MovieList","movies","map","useState","searchQuery","setSearchQuery","setMovies","error","setError","loading","setLoading","useSearchParams","searchParams","setSearchParams","useEffect","get","newQuery","then","length","Notiflix","catch","message","finally","onSubmit","element","preventDefault","target","elements","value","toLowerCase","trim","type","onChange","currentTarget","autoFocus"],"sourceRoot":""}